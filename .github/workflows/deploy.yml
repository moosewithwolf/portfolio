name: Deploy via VPN

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Mask secrets
        run: |
          echo "::add-mask::${{ secrets.SSH_PRIVATE_KEY }}"
          echo "::add-mask::${{ secrets.SSH_KNOWN_HOST }}"
          echo "::add-mask::${{ secrets.SSH_USER }}"
          echo "::add-mask::${{ secrets.WG_CLIENT_PRIVATE_KEY }}"
          echo "::add-mask::${{ secrets.WG_SERVER_PUBLIC_KEY }}"
          echo "::add-mask::${{ secrets.WG_ENDPOINT }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install WireGuard
        run: |
          sudo apt update
          sudo apt install -y wireguard-tools

      - name: Setup WireGuard
        run: |
          set +x
          cat <<EOF > wg0.conf
          [Interface]
          PrivateKey = ${{ secrets.WG_CLIENT_PRIVATE_KEY }}
          Address    = 10.0.0.2/24

          [Peer]
          PublicKey           = ${{ secrets.WG_SERVER_PUBLIC_KEY }}
          AllowedIPs          = 10.0.0.0/24
          Endpoint            = ${{ secrets.WG_ENDPOINT }}
          PersistentKeepalive = 25
          EOF
          sudo mv wg0.conf /etc/wireguard/
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo wg-quick up wg0

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -q -o StrictHostKeyChecking=yes -o LogLevel=ERROR ${{ secrets.SSH_USER }}@10.0.0.1 <<'EOF' > /dev/null 2>&1
            set -e
            cd ~/portfolio
            git reset --hard HEAD
            git clean -fd
            git pull --rebase

            cd portfolio-frontend
            npm ci
            npm run build

            cd ../portfolio-backend
            npm ci
            pm2 restart portfolio-server > /dev/null 2>&1
          EOF
